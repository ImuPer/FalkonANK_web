{% extends 'base.html.twig' %}

{% block title %}{{ 'basket.title'|trans }}{% endblock %}

{% block body %}
    <link rel="stylesheet" href={{ asset("css/basket.css") }}>

    <div class="basket-container">
        <h2 class="text-center">{{ 'basket.title'|trans }}</h2>
        {% set totalPrice = 0 %}

        {% if basketPs is empty %}
            <p>{{ message }}</p>
            <div class="d-inline-flex p-3">
                <a href="{{ path('app_home_page') }}">
                    <button type="button" class="btn btn-dark">{{ 'basket.back_to_shop'|trans }}</button>
                </a>
            </div>
        {% else %}
            {% for basketP in basketPs %}
                <div class="basket-item" data-id="{{ basketP.getId() }}">
                    <div class="item-image">
                        <a href="{{ path('app_product_show', {'id': basketP.getProduct().getId()}) }}">
                            <img src="{{ asset('upload/images/products/' ~ basketP.getProduct().getImg()) }}" alt="">
                        </a>
                    </div>
                    <div class="item-info">
                        <h2 class="item-name">{{ basketP.getProduct().getName() }}</h2>
                        <p class="item-price">{{ (basketP.getProduct().getFinalPrice()/100) | number_format(2, ',', '.') }} CVE</p>
                        <p class="small">
                            <span class="text-danger">{{ 'basket.city'|trans }}: {{ basketP.getProduct().getShop() and basketP.getProduct().getShop().getCity() ? basketP.getProduct().getShop().getCity().getName() : 'Ville inconnue' }}</span>
                        </p>
                    </div>
                    <div class="item-controls">
                        <button class="quantity-btn" onclick="updateQuantity('{{ basketP.getId() }}', {{ basketP.quantity }} - 1)">&#8722;</button>
                        <span class="item-quantity">{{ basketP.quantity }}</span>
                        <button class="quantity-btn" onclick="updateQuantity('{{ basketP.getId() }}', {{ basketP.quantity }} + 1)">&#43;</button>

                        {{ include('basket/_delete_form.html.twig') }}
                    </div>
                </div>
                {% set productPrice = basketP.getProduct().getFinalPrice()|default(0) %}
                {% set quantity = basketP.quantity|default(1) %}
                {% set totalPrice = totalPrice + (productPrice * quantity) %}
            {% else %}
                <p class="empty-basket">{{ 'basket.empty_message'|trans }}</p>
                <div class="d-inline-flex p-3">
                    <a href="{{ path('app_home_page') }}">
                        <button type="button" class="btn btn-dark">{{ 'basket.back_to_shop'|trans }}</button>
                    </a>
                </div>
            {% endfor %}
        {% endif %}

        {% if basketPs|length > 0 %}
            <div class="basket-total">
                <h3>{{ 'basket.total'|trans }}:
                    {{ (totalPrice/100) | number_format(2, ',', '.') }} CVE
                </h3>

                {% set conversionRate = 110 %}
                {# 1 EUR = 110 CVE #}
                {% set conversionRateDolar = 100 %}
                {# 1 USD = 100 CVE #}

                {{ ((totalPrice/100) / conversionRate)|number_format(2, ',', '.') }} € (euro)

                <p>
                    {{ ((totalPrice/100) / conversionRateDolar)|number_format(2, ',', '.') }} $ (usa)
                </p>
            </div>

            <form action="{{ path('app_checkout') }}" method="post" class="mt-3">
                <input type="hidden" name="total" value="{{ totalPrice }}"/>

                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#checkoutModal">
                    {{ 'basket.checkout_button'|trans }}
                </button>

                <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form method="post" action="{{ path('app_checkout') }}">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="checkoutModalLabel">{{ 'basket.beneficiary_info'|trans }}</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'basket.close'|trans }}"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="city" class="form-label">{{ 'basket.beneficiary_city'|trans }} *</label>
                                        <select class="form-select" id="city" name="city_id" required>
                                            <option value="">{{ 'basket.select_city'|trans }}</option>
                                            {% for city in cities %}
                                                <option value="{{ city.id }}">{{ city.name }}</option>
                                            {% endfor %}
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="beneficiary_name" class="form-label">{{ 'basket.beneficiary_name'|trans }} *</label>
                                        <input type="text" class="form-control" name="beneficiary_name" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="beneficiary_address" class="form-label">{{ 'basket.beneficiary_address'|trans }} *</label>
                                        <input type="text" class="form-control" name="beneficiary_address" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="beneficiary_email" class="form-label">{{ 'basket.beneficiary_email'|trans }} ({{ 'basket.optional'|trans }})</label>
                                        <input type="text" class="form-control" name="beneficiary_email">
                                    </div>
                                    <div class="mb-3">
                                        <label for="phone" class="form-label">{{ 'basket.phone_number'|trans }} ({{ 'basket.optional'|trans }})</label>
                                        <input type="tel" class="form-control" name="phone">
                                    </div>
                                    <input type="hidden" name="total" value="{{ totalPrice }}"/>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-success">{{ 'basket.confirm_pay'|trans }}</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </form>

            <div class="d-inline-flex p-3">
                <a href="{{ path('app_home_page') }}">
                    <button type="button" class="btn btn-dark">{{ 'basket.back_to_shop'|trans }}</button>
                </a>
            </div>
        {% endif %}
    </div>

    <script>
        function updateQuantity(productId, newQuantity) {
            if (newQuantity < 0)
                return;

            let url;

            if (newQuantity === 0) {
                url = "{{ path('app_removePB_delite', {'id': 'PLACEHOLDER_ID'}) }}";
                url = url.replace('PLACEHOLDER_ID', productId);
            } else {
                url = "{{ path('app_quantity_edit', {'id': 'PLACEHOLDER_ID', 'quantity': 'PLACEHOLDER_QUANTITY'}) }}";
                url = url.replace('PLACEHOLDER_ID', productId);
                url = url.replace('PLACEHOLDER_QUANTITY', newQuantity);
            }

            const csrfToken = '{{ csrf_token('update_quantity') }}';

            fetch(url, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': csrfToken
                }
            }).then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            }).then(data => {
                if (data.success) {
                    if (newQuantity === 0) {
                        document.querySelector(`.basket-item[data-id="${productId}"]`).remove();
                    } else {
                        window.location.reload();
                    }
                } else {
                    console.error('Erreur lors de la mise à jour du panier:', data.message);
                }
            }).catch(error => console.error('Erreur lors de la requête:', error));
        }
    </script>

{% endblock %}
