{% extends 'base.html.twig' %}

{% block title %}Minha Cesta{% endblock %}

{% block body %}
	<link rel="stylesheet" href={{asset("css/basket.css")}}>


	<div class="basket-container">
		<h2 class="text-center">Minha Cesta</h2>
		{% set totalPrice = 0 %}

		{% if basketPs is empty %}
			<p>{{ message }}</p>
		{% else %}
			{% for basketP in basketPs %}
				<div class="basket-item" data-id="{{ basketP.getId() }}">
					<div class="item-image">
						<a href="{{path('app_product_show', {'id': basketP.getProduct().getId()})}}"><img src="{{ asset('upload/images/products/' ~ basketP.getProduct().getImg()) }}" alt=""></a>
					</div>
					<div class="item-info">
						<h2 class="item-name">{{ basketP.getProduct().getName() }}</h2>
						<p class="item-price">{{ (basketP.getProduct().getFinalPrice()/100) | number_format(2, ',', '.') }}
							CVE</p>
						<p class="small">
							<span class="text-danger">Cidade:
								{{ basketP.getProduct().getShop().getCity().getName() }}</span>
						</p>
					</div>
					<div class="item-controls">
						<button class="quantity-btn" onclick="updateQuantity('{{ basketP.getId() }}', {{ basketP.quantity }} - 1)">&#8722;</button>
						<span class="item-quantity">{{ basketP.quantity }}</span>
						<button class="quantity-btn" onclick="updateQuantity('{{ basketP.getId() }}', {{ basketP.quantity }} + 1)">&#43;</button>

						{{ include('basket/_delete_form.html.twig') }}
					</div>
				</div>
				{% set productPrice = basketP.getProduct().getFinalPrice()|default(0) %}
				{% set quantity = basketP.quantity|default(1) %}
				{% set totalPrice = totalPrice + (productPrice * quantity) %}
			{% else %}
				<p class="empty-basket">A sua cesta está vazia !</p>
			{% endfor %}
		{% endif %}

		{% if basketPs|length > 0 %}
			<div class="basket-total">
				<h3>Total :
					{{ (totalPrice/100) | number_format(2, ',', '.') }}
					CVE</h3>

				{% set conversionRate = 110 %}
				{# 1 EUR = 110 CVE #}
				{% set conversionRateDolar = 100 %}
				{# 1 USD = 100 CVE #}

				{# Conversion de CVE en EURO #}
				{{ ((totalPrice/100) / conversionRate)|number_format(2, ',', '.') }}
				€ (euro)

					<p>
					{# Conversion de CVE en USD #}
					{{ ((totalPrice/100) / conversionRateDolar)|number_format(2, ',', '.') }}
				$ (usa)
			</p>
			</div>
				<form action="{{path('app_checkout')}}" method="post" class="mt-3"> <input
				type="hidden" name="total" value="{{ totalPrice }}"/>
				<!-- Le bouton devient -->
				<button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#checkoutModal">
					Finalizar a compra
				</button>

				<!-- Modal pour formulaire -->
				<div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<form method="post" action="{{ path('app_checkout') }}">
								<div class="modal-header">
									<h5 class="modal-title" id="checkoutModalLabel">Informações do Beneficiário</h5>
									<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
								</div>
								<div class="modal-body">
									<div class="mb-3">
										<label for="city" class="form-label">Cidade do Beneficiário *
										</label>
										<select class="form-select" id="city" name="city_id" required>
											<option value="">Seleciona uma cidade</option>
											{% for city in cities %}
												<option value="{{ city.id }}">{{ city.name }}</option>
											{% endfor %}
										</select>
									</div>
									<div class="mb-3">
										<label for="beneficiary_name" class="form-label">Nome *</label>
										<input type="text" class="form-control" name="beneficiary_name" required>
									</div>
									<div class="mb-3">
										<label for="beneficiary_address" class="form-label">Endereço do Beneficiário *</label>
										<input type="text" class="form-control" name="beneficiary_address" required>
									</div>
									<div class="mb-3">
										<label for="beneficiary_email" class="form-label">Email (opcional)</label>
										<input type="text" class="form-control" name="beneficiary_email">
									</div>
									<div class="mb-3">
										<label for="phone" class="form-label">Número de Telemóvel (opcional)</label>
										<input type="tel" class="form-control" name="phone">
									</div>
									<input type="hidden" name="total" value="{{ totalPrice }}"/>
								</div>
								<div class="modal-footer">
									<button type="submit" class="btn btn-success">Confirmar e Pagar</button>
								</div>
							</form>
						</div>
					</div>
				</div>

			</form>
			<div class="d-inline-flex p-3">
				<a href="{{path('app_home_page')}}">
					<button type="button" class="btn btn-dark">Voltar a loja</button>
				</a>
			</div>

		{% endif %}
	</div>

	<script>
		function updateQuantity(productId, newQuantity) {
if (newQuantity < 0) 
return;



// Empêche d'avoir une quantité négative

let url;

if (newQuantity === 0) { // Si la nouvelle quantité est 0, on prépare l'URL pour supprimer le produit
url = "{{ path('app_removePB_delite', {'id': 'PLACEHOLDER_ID'}) }}";
url = url.replace('PLACEHOLDER_ID', productId);
} else { // Sinon, on met à jour la quantité
url = "{{ path('app_quantity_edit', {'id': 'PLACEHOLDER_ID', 'quantity': 'PLACEHOLDER_QUANTITY'}) }}";
url = url.replace('PLACEHOLDER_ID', productId);
url = url.replace('PLACEHOLDER_QUANTITY', newQuantity);
}

// Inclure le token CSRF
const csrfToken = '{{ csrf_token('update_quantity') }}';

fetch(url, {
method: 'POST',
headers: {
'X-Requested-With': 'XMLHttpRequest',
'Content-Type': 'application/json',
'X-CSRF-TOKEN': csrfToken // Ajout du token CSRF dans les headers
}
}).then(response => {
if (!response.ok) {
throw new Error (`HTTP error! status: ${
response.status
}`);
}
return response.json();
}).then(data => {
if (data.success) {
if (newQuantity === 0) { // Si le produit est supprimé, retirer l'élément du DOM sans recharger la page
document.querySelector (`.basket-item[data-id="${productId}"]`).remove();
} else { // Si la quantité est mise à jour, recharger la page pour voir les changements
window.location.reload();
}
} else {
console.error('Erreur lors de la mise à jour du panier:', data.message);
}
}).catch(error => console.error('Erreur lors de la requête:', error));
}
	</script>


{% endblock %}
